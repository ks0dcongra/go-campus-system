version: "3.8"

services:
  db:
    env_file:
        - "./.env"
    image: postgres:14-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST} 
    ports:
      - '9525:5432'
    # volumes:
    #   - db:/var/lib/postgresql/data
    #   - ./sql/test.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
        - server
  gin:
    env_file:
      - "./.env"
    image: andy_trainings
    container_name: gin
    build: .
    ports: 
      - 9528:8080 
    restart: on-failure
    volumes:
      - ./app/config:/usr/src/app/
    depends_on:
      - db    
    networks:
      - server
  redis:
    container_name: redis
    image: redis
    # Specify the redis.conf file to use and add a password.
    command: /usr/local/etc/redis/redis.conf
    # command: /usr/local/etc/redis/redis.conf --requirepass mypassword
    ports: 
      - "6379:6379"
    # map the volumes to that redis has the custom conf file from this project.
    volumes: 
      - /redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - server
  proxy:
    env_file:
      - "./.env"
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes: 
      - ./nginx/www:/usr/share/nginx/html
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./nginx/cert:/etc/nginx/cert 
    networks:
      - server
    links:
      - gin
  drone-server:
    image: drone/drone:2
    container_name: drone-server
    ports:
      - 8000:80
    volumes:
      - ./drone:/data
    restart: always
    networks:
      - server
    environment:
      # Gitea
      - DRONE_GITEA_CLIENT_ID=83865b2b-bc97-4cb7-950f-512dc8016357 # client id
      - DRONE_GITEA_CLIENT_SECRET=xqBGH6PAQgN3o5pFKokeY6dwuqnDE2eg5YpJTXrS2aG2 #client secret
      - DRONE_GITEA_SERVER=https://git-scm.castlestech.cloud/  # gitea server
      - DRONE_GIT_ALWAYS_AUTH=true
      # Drone
      - DRONE_SERVER_HOST=8b25-61-31-138-103.ngrok-free.app # drone server
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=123456 #共用密碼   
  drone-runner:
    image: drone/drone-runner-docker:1.4
    container_name: drone-runner
    ports:
      - "3000:3000"
    restart: always
    networks:
      - server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone-server
      - DRONE_RPC_SECRET=123456
      - DRONE_RUNNER_CAPACITY=3
      - DRONE_RUNNER_NAME=my-first-runner
volumes:
  db:  
  gin:
  redis:
  proxy:
networks:
  server:
  gitea:
    external: false
    
 